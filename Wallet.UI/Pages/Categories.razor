@page "/categories"
@inherits CategoryAwareComponentBase<CategoryRequest>
@attribute [Authorize]

<h1>Kategóriák</h1>

<Alert Message="@ErrorMessage" />

@if (IsLoading)
{
    <div>Adatok betöltése...</div>
}
else
{
    <CategoryRequestModal @ref="_modal" Title="@ModalTitle" Category="Data" OnSubmit="SaveAsync" />

    <button type="button" class="btn btn-primary mt-4 mb-3" @onclick="Add">
        <i class="bi bi-plus-circle"></i>
        Új kategória
    </button>

    <div class="row">
        <table class="col-5 table table-borderless">
            <thead>
            <tr>
                <th class="col-3">Név</th>
                <th class="col-1"></th>
            </tr>
            </thead>

            <tbody>
            @foreach (var category in Categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>
                        <button @onclick="() => EditAsync(category)" class="btn btn-primary">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button @onclick="() => DeleteAsync(category.Id)" class="btn btn-danger">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <div class="col-9"></div>
    </div>
}

@code {

    private CategoryRequestModal _modal;
    private long? _id;

    private string ModalTitle => $"Kategória {(_id.HasValue ? "módosítás" : "létrehozás")}";

    protected override async Task OnInitializedAsync()
    {
        Data = new CategoryRequest();
        await base.OnInitializedAsync();
    }

    private async Task Add()
    {
        Data = new CategoryRequest();
        _id = null;
        await _modal.OpenAsync();
    }

    private async Task DeleteAsync(long id)
    {
        await HandleRequest(
            () => Service.DeleteAsync(UriHelper.GetCategoryUriWith(id)),
            onSuccess: LoadCategoriesAsync,
            errorMessage: "Hiba a kategória törlése közben!");
    }

    private async Task EditAsync(CategoryResponse category)
    {
        Data = new CategoryRequest { Name = category.Name };
        _id = category.Id;
        await _modal.OpenAsync();
    }

    private async Task SaveAsync()
    {
        var isEdit = _id.HasValue;

        await HandleRequest(
            () => isEdit ? Service.UpdateAsync(UriHelper.GetCategoryUriWith(_id!.Value), Data) : Service.CreateAsync(UriHelper.CategoryUri, Data),
            onSuccess: LoadCategoriesAsync,
            errorMessage: $"Hiba a kategória {(isEdit ? "módosítása" : "létrehozása")} közben!");
    }

}