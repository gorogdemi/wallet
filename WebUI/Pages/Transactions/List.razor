@page "/transactions"
@inherits TransactionBase<List<TransactionViewModel>>
@attribute [Authorize]

<h1>Tranzakciók</h1>

<FluentButton Class="mt-3 mb-3" Appearance="Appearance.Accent" OnClick="@(() => NavigationManager.NavigateTo("transactions/create"))">
    Új tranzakció
    <FluentIcon Icon="@Icons.Filled.Size20.AddCircle" Slot="start" Color="Color.Fill" />
</FluentButton>

<FluentCard Style="display: grid; padding: 0; min-height: 250px;" Width="100%" Height="auto">
    <FluentDataGrid Items="FilteredItems" GridTemplateColumns="0.5fr 0.2fr 0.2fr 0.2fr 0.4fr 0.2fr 0.2fr 0.2fr 0.2fr" ResizableColumns="true" Style="overflow: auto;">
        <ChildContent>
            <PropertyColumn Title="Megnevezés" Property="@(c => c.Name)" Sortable="true" Align="Align.Start" IsDefaultSortColumn="true">
                <ColumnOptions>
                    <div class="search-box">
                        <FluentSearch @bind-Value="_searchTerm" Autofocus="true" Placeholder="Keresés..." Immediate="true" ImmediateDelay="200" />
                    </div>
                </ColumnOptions>
            </PropertyColumn>
            <PropertyColumn Title="Teljes" Property="@(c => c.SumAmount)" Format="0 Ft" Sortable="true" Align="Align.End" />
            <PropertyColumn Title="Készpénz" Property="@(c => c.CashAmount)" Format="0 Ft" Sortable="true" Align="Align.End" />
            <PropertyColumn Title="Bank" Property="@(c => c.BankAmount)" Format="0 Ft" Sortable="true" Align="Align.End" />
            <PropertyColumn Title="Komment" Property="@(c => c.Comment)" Sortable="true" Align="Align.Start" />
            <PropertyColumn Title="Dátum" Property="@(c => c.Date.ToFormattedDate())" Sortable="true" Align="Align.Start" />
            <PropertyColumn Title="Típus" Property="@(c => c.Type.ToTransactionTypeText())" Sortable="true" Align="Align.Start" />
            <PropertyColumn Title="Kategória" Property="@(c => c.CategoryName.ToCategoryText())" Sortable="true" Align="Align.Start" />
            <TemplateColumn Title="Művelet" TGridItem="TransactionViewModel">
                <EditorButtons OnEdit="@(() => NavigationManager.NavigateTo($"transactions/edit/{context.Id}"))" OnDelete="() => DeleteAsync(context.Id)" />
            </TemplateColumn>
        </ChildContent>
        <EmptyContent>
            @if (IsLoading)
            {
                <div>Adatok betöltése...</div>
            }
            else
            {
                <div>Nincs megjelentíthető adat.</div>
            }
        </EmptyContent>
    </FluentDataGrid>
</FluentCard>

@code {

    private string _searchTerm = string.Empty;

    private IQueryable<TransactionViewModel> FilteredItems => ViewModel?.Where(x => x.Name.Contains(_searchTerm, StringComparison.OrdinalIgnoreCase)).AsQueryable();

    protected override Task SetViewModelAsync() => LoadTransactionsAsync();

    private async Task DeleteAsync(long id)
    {
        await HandleRequestAsync(
            () => Service.DeleteAsync(id),
            async () => await LoadTransactionsAsync());
    }

    private Task LoadTransactionsAsync()
    {
        return HandleRequestAsync(
            () => Service.GetAllAsync(),
            result => ViewModel = result);
    }

}