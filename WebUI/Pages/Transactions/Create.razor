@page "/transactions/create"
@inherits TransactionBase<TransactionFormViewModel>

<h1>Új Tranzakció</h1>

@if (IsLoading)
{
    <div>Adatok betöltése...</div>
}
else
{
    <FluentCard Width="100%" Height="auto">
        <TransactionForm ViewModel="ViewModel" Categories="_categories" OnClose="NavigateToTransactions" OnSubmit="CreateAsync" />
    </FluentCard>
}

@code {

    private List<CategoryViewModel> _categories;

    protected override async Task SetViewModelAsync()
    {
        ViewModel = new TransactionFormViewModel();

        await HandleRequestAsync(
            () => CategoryService.GetAllAsync(),
            result => _categories = result);
    }

    private Task CreateAsync()
    {
        var request = new TransactionRequest
        {
            Name = ViewModel.Name,
            Comment = ViewModel.Comment,
            BankAmount = ViewModel.BankAmount,
            CashAmount = ViewModel.CashAmount,
            Date = ViewModel.Date,
            CategoryId = ViewModel.CategoryId is not null ? Convert.ToInt64(ViewModel.CategoryId) : null,
            Type = ViewModel.Type,
        };

        return HandleRequestAsync(
            () => Service.CreateAsync(request),
            NavigateToTransactions);
    }

}